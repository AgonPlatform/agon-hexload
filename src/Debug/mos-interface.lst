Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED07-Jan-23     14:22:35     page:   1


PC     Object              I  Line    Source 
                           A     1    ;
                           A     2    ; Title:		AGON MOS - MOS assembly interfa
                           A     3    ; Author:		Jeroen Venema
                           A     4    ; Created:		15/10/2022
                           A     5    ; Last Updated:	26/11/2022
                           A     6    ; 
                           A     7    ; Modinfo:
                           A     8    ; 15/10/2022:		Added _putch, _getch
                           A     9    ; 21/10/2022:		Added _puts
                           A    10    ; 22/10/2022:		Added _waitvblank, _mos_f* 
                           A    11    ; 26/11/2022:       __putch, changed default ro
                           A    12    
                           B     0    	.include "mos_api.inc"
                           B     1    ;
                           B     2    ; Title:	AGON MOS - API for user projects
                           B     3    ; Author:	Dean Belfield
                           B     4    ; Created:	03/08/2022
                           B     5    ; Last Updated:	13/10/2022
                           B     6    ;
                           B     7    ; Modinfo:
                           B     8    ; 05/08/2022:	Added mos_feof
                           B     9    ; 09/08/2022:	Added system variables: cursorX
                           B    10    ; 18/08/2022:	Added system variables: scrchar
                           B    11    ; 05/09/2022:	Added mos_ren, vdp_pflag_mode
                           B    12    ; 24/09/2022:	Added mos_getError, mos_mkdir
                           B    13    ; 13/10/2022:	Added mos_oscli
                           B    14    
                           B    15    ; MOS high level functions
                           B    16    ;
       00000000            B    17    mos_getkey:		EQU	00h
       00000001            B    18    mos_load:		EQU	01h
       00000002            B    19    mos_save:		EQU	02h
       00000003            B    20    mos_cd:			EQU	03h
       00000004            B    21    mos_dir:		EQU	04h
       00000005            B    22    mos_del:		EQU	05h
       00000006            B    23    mos_ren:		EQU	06h
       00000007            B    24    mos_mkdir:		EQU	07h
       00000008            B    25    mos_sysvars:		EQU	08h
       00000009            B    26    mos_editline:		EQU	09h
       0000000A            B    27    mos_fopen:		EQU	0Ah
       0000000B            B    28    mos_fclose:		EQU	0Bh
       0000000C            B    29    mos_fgetc:		EQU	0Ch
       0000000D            B    30    mos_fputc:		EQU	0Dh
       0000000E            B    31    mos_feof:		EQU	0Eh
       0000000F            B    32    mos_getError:		EQU	0Fh
       00000010            B    33    mos_oscli:		EQU	10h
                           B    34    
                           B    35    ; FatFS file access functions
                           B    36    ;
       00000080            B    37    ffs_fopen:		EQU	80h
       00000081            B    38    ffs_fclose:		EQU	81h
       00000082            B    39    ffs_fread:		EQU	82h
       00000083            B    40    ffs_fwrite:		EQU	83h
       00000084            B    41    ffs_fseek:		EQU	84h
       00000085            B    42    ffs_ftruncate:		EQU	85h
       00000086            B    43    ffs_fsync:		EQU	86h
       00000087            B    44    ffs_fforward:		EQU	87h
       00000088            B    45    ffs_fexpand:		EQU	88h
       00000089            B    46    ffs_fgets:		EQU	89h
       0000008A            B    47    ffs_fputc:		EQU	8Ah
       0000008B            B    48    ffs_fputs:		EQU	8Bh
       0000008C            B    49    ffs_fprintf:		EQU	8Ch
       0000008D            B    50    ffs_ftell:		EQU	8Dh
       0000008E            B    51    ffs_feof:		EQU	8Eh
       0000008F            B    52    ffs_fsize:		EQU	8Fh
       00000090            B    53    ffs_ferror:		EQU	90h
                           B    54    
                           B    55    ; FatFS directory access functions
                           B    56    ;
       00000091            B    57    ffs_dopen:		EQU	91h
       00000092            B    58    ffs_dclose:		EQU	92h
       00000093            B    59    ffs_dread:		EQU	93h
       00000094            B    60    ffs_dfindfirst:		EQU	94h
       00000095            B    61    ffs_dfindnext:		EQU	95h
                           B    62    
                           B    63    ; FatFS file and directory management functions
                           B    64    ;
       00000096            B    65    ffs_stat:		EQU	96h
       00000097            B    66    ffs_unlink:		EQU	97h
       00000098            B    67    ffs_rename:		EQU	98h
       00000099            B    68    ffs_chmod:		EQU	99h
       0000009A            B    69    ffs_utime:		EQU	9Ah
       0000009B            B    70    ffs_mkdir:		EQU	9Bh
       0000009C            B    71    ffs_chdir:		EQU	9Ch
       0000009D            B    72    ffs_chdrive:		EQU	9Dh
       0000009E            B    73    ffs_getcwd:		EQU	9Eh
                           B    74    
                           B    75    ; FatFS volume management and system configurat
                           B    76    ;
       0000009F            B    77    ffs_mount:		EQU	9Fh
       000000A0            B    78    ffs_mkfs:		EQU	A0h
       000000A1            B    79    ffs_fdisk		EQU	A1h
       000000A2            B    80    ffs_getfree:		EQU	A2h
       000000A3            B    81    ffs_getlabel:		EQU	A3h
       000000A4            B    82    ffs_setlabel:		EQU	A4h
       000000A5            B    83    ffs_setcp:		EQU	A5h
                           B    84    	
                           B    85    ; File access modes
                           B    86    ;
       00000001            B    87    fa_read:		EQU	01h
       00000002            B    88    fa_write:		EQU	02h
       00000000            B    89    fa_open_existing:	EQU	00h
       00000004            B    90    fa_create_new:		EQU	04h
       00000008            B    91    fa_create_always:	EQU	08h
       00000010            B    92    fa_open_always:		EQU	10h
       00000030            B    93    fa_open_append:		EQU	30h
                           B    94    	
                           B    95    ; System variable indexes for api_sysvars
                           B    96    ; Index into _sysvars in globals.asm
                           B    97    ;
       00000000            B    98    sysvar_time:		EQU	00h
       00000004            B    99    sysvar_vpd_pflags:	EQU	04h
       00000005            B   100    sysvar_keycode:		EQU	05h
       00000006            B   101    sysvar_keymods:		EQU	06h
       00000007            B   102    sysvar_cursorX:		EQU	07h
       00000008            B   103    sysvar_cursorY:		EQU	08h
       00000009            B   104    sysvar_scrchar:		EQU	09h
       0000000A            B   105    sysvar_scrpixel:	EQU	0Ah
       0000000D            B   106    sysvar_audioChannel:	EQU	0Dh
       0000000E            B   107    syscar_audioSuccess:	EQU	0Eh
                           B   108    	
                           B   109    ; Flags for the VPD protocol
                           B   110    ;
       00000001            B   111    vdp_pflag_cursor:	EQU		00000001b
       00000002            B   112    vdp_pflag_scrchar:	EQU		00000010b
       00000004            B   113    vdp_pflag_point:	EQU		00000100b
       00000008            B   114    vdp_pflag_audio:	EQU		00001000b
       00000010            B   115    vdp_pflag_mode:		EQU		00010000b
                           B   116    	
                           B   117    ;
                           B   118    ; Macro for calling the API
                           B   119    ; Parameters:
                           B   120    ; - function: One of the function numbers liste
                           B   121    ;
                           B   122    MOSCALL:		MACRO	function
                           B   123    			LD	A, function
                           B   124    			RST.LIS	08h
                           B   125    			ENDMACRO 	
                           A    14    
                           A    15    	XDEF _putch
                           A    16    	XDEF __putch
                           A    17    	XDEF _getch
                           A    18    	;XDEF _puts
                           A    19    	XDEF _waitvblank
                           A    20    	XDEF _mos_fopen
                           A    21    	XDEF _mos_fclose
                           A    22    	XDEF _mos_fgetc
                           A    23    	XDEF _mos_fputc
                           A    24    	XDEF _mos_feof
                           A    25    	XDEF _getsysvar8bit
                           A    26    	XDEF _getsysvar16bit
                           A    27    	XDEF _getsysvar24bit
                           A    28    
                           A    29    	segment CODE
                           A    30    	.assume ADL=1
                           A    31    	
040198                     A    32    _putch:
040198                     A    33    __putch:
040198 FDE5                A    34    	push 	iy
04019A FD210000 00         A    35    	ld 		iy,0
04019F FD39                A    36    	add 	iy, sp
0401A1 FD7E06              A    37    	ld 		a, (iy+6)
0401A4 5BD7                A    38    	rst.lil	10h
0401A6 21000000            A    39    	ld		hl,0
0401AA 6F                  A    40    	ld		l,a
0401AB FDF9                A    41    	ld		sp,iy
0401AD FDE1                A    42    	pop		iy
0401AF C9                  A    43    	ret
                           A    44    
0401B0                     A    45    _getch:
0401B0 FDE5                A    46    	push iy
0401B2 3E08                A    47    	ld a, mos_sysvars			; MOS Call for 
0401B4 5BCF                A    48    	rst.lil 08h					; returns point
0401B6                     A    49    _getch0:
0401B6 DD7E05              A    50    	ld a, (ix+sysvar_keycode)	; get current k
0401B9 B7                  A    51    	or a,a
0401BA 28 FA               A    52    	jr z, _getch0				; wait for keyp
                           A    53    	
0401BC F5                  A    54    	push af						; debounce key,
0401BD AF                  A    55    	xor a
0401BE DD7705              A    56    	ld (ix+sysvar_keycode),a
0401C1 F1                  A    57    	pop af
0401C2 FDE1                A    58    	pop iy
0401C4 C9                  A    59    	ret
                           A    60    
0401C5                     A    61    _waitvblank:
0401C5 FDE5                A    62    	push iy
0401C7 3E08                A    63    	ld a, mos_sysvars
0401C9 5BCF                A    64    	rst.lil 08h
0401CB FD7E00              A    65    	ld a, (iy + sysvar_time + 0)
0401CE FDBE00              A    66    $$:	cp a, (iy + sysvar_time + 0)
0401D1 28 FB               A    67    	jr z, $B
0401D3 FDE1                A    68    	pop iy
0401D5 C9                  A    69    	ret
                           A    70    
                           A    71    
0401D6                     A    72    _getsysvar8bit:
0401D6 FDE5                A    73    	push iy
0401D8 3E08                A    74    	ld a, mos_sysvars
0401DA 5BCF                A    75    	rst.lil 08h
0401DC FD7E00              A    76    	ld a, (iy)					; sysvars base 
0401DF 1600                A    77    	ld d,0
0401E1 5F                  A    78    	ld e,a
0401E2 FD19                A    79    	add iy,de					; iy now points
0401E4 FD7E00              A    80    	ld a, (iy)
0401E7 FDE1                A    81    	pop iy
0401E9 C9                  A    82    	ret
                           A    83    
0401EA                     A    84    _getsysvar16bit:
0401EA                     A    85    _getsysvar24bit:
0401EA FDE5                A    86    	push iy
0401EC 3E08                A    87    	ld a, mos_sysvars
0401EE 5BCF                A    88    	rst.lil 08h
0401F0 FD7E00              A    89    	ld a, (iy)					; sysvars base 
0401F3 1600                A    90    	ld d,0
0401F5 5F                  A    91    	ld e,a
0401F6 FD19                A    92    	add iy,de					; ix now points
0401F8 FD2700              A    93    	ld hl, (iy)
0401FB FDE1                A    94    	pop iy
0401FD C9                  A    95    	ret
                           A    96    
0401FE                     A    97    _mos_fopen:
0401FE FDE5                A    98    	push iy
040200 FD210000 00         A    99    	ld iy,0
040205 FD39                A   100    	add iy, sp
                           A   101    	
040207 FD2706              A   102    	ld hl, (iy+6)	; address to 0-terminated f
04020A FD4E09              A   103    	ld c,  (iy+9)	; mode : fa_read / fa_write
04020D 3E0A                A   104    	ld a, mos_fopen
04020F 5BCF                A   105    	rst.lil 08h		; returns filehandle in A
                           A   106    	
040211 FDF9                A   107    	ld sp,iy
040213 FDE1                A   108    	pop iy
040215 C9                  A   109    	ret	
                           A   110    
040216                     A   111    _mos_fclose:
040216 FDE5                A   112    	push iy
040218 FD210000 00         A   113    	ld iy,0
04021D FD39                A   114    	add iy, sp
                           A   115    	
04021F FD4E06              A   116    	ld c, (iy+6)	; filehandle, or 0 to close
040222 3E0B                A   117    	ld a, mos_fclose
040224 5BCF                A   118    	rst.lil 08h		; returns number of files s
                           A   119    	
040226 FDF9                A   120    	ld sp,iy
040228 FDE1                A   121    	pop iy
04022A C9                  A   122    	ret	
                           A   123    
04022B                     A   124    _mos_fgetc:
04022B FDE5                A   125    	push iy
04022D FD210000 00         A   126    	ld iy,0
040232 FD39                A   127    	add iy, sp
                           A   128    	
040234 FD4E06              A   129    	ld c, (iy+6)	; filehandle
040237 3E0C                A   130    	ld a, mos_fgetc
040239 5BCF                A   131    	rst.lil 08h		; returns character in A
                           A   132    	
04023B FDF9                A   133    	ld sp,iy
04023D FDE1                A   134    	pop iy
04023F C9                  A   135    	ret	
                           A   136    
040240                     A   137    _mos_fputc:
040240 FDE5                A   138    	push iy
040242 FD210000 00         A   139    	ld iy,0
040247 FD39                A   140    	add iy, sp
                           A   141    	
040249 FD4E06              A   142    	ld c, (iy+6)	; filehandle
04024C FD4609              A   143    	ld b, (iy+9)	; character to write
04024F 3E0D                A   144    	ld a, mos_fputc
040251 5BCF                A   145    	rst.lil 08h		; returns nothing
                           A   146    	
040253 FDF9                A   147    	ld sp,iy
040255 FDE1                A   148    	pop iy
040257 C9                  A   149    	ret	
                           A   150    
040258                     A   151    _mos_feof:
040258 FDE5                A   152    	push iy
04025A FD210000 00         A   153    	ld iy,0
04025F FD39                A   154    	add iy, sp
                           A   155    	
040261 FD4E06              A   156    	ld c, (iy+6)	; filehandle
040264 3E0E                A   157    	ld a, mos_feof
040266 5BCF                A   158    	rst.lil 08h		; returns A: 1 at End-of-Fi
                           A   159    	
040268 FDF9                A   160    	ld sp,iy
04026A FDE1                A   161    	pop iy
04026C C9                  A   162    	ret	
                           A   163    
                           A   164    end
                           A   165    
                           A   166    	


Errors: 0
Warnings: 0
Lines Assembled: 290
