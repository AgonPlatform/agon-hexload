Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED07-Jan-23     14:22:35     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optsize -noreduceopt -nopadbranch
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\uart.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "fmt_type",19
                           A     9    .DEFINE "status"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 12
                           A    13    .ENDEF
                           A    14    .DEFINE "flags"
                           A    15    .VALUE 1
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "size"
                           A    20    .VALUE 2
                           A    21    .CLASS 8
                           A    22    .TYPE 2
                           A    23    .ENDEF
                           A    24    .DEFINE "chr"
                           A    25    .VALUE 3
                           A    26    .CLASS 8
                           A    27    .TYPE 2
                           A    28    .ENDEF
                           A    29    .DEFINE "type"
                           A    30    .VALUE 4
                           A    31    .CLASS 8
                           A    32    .TYPE 2
                           A    33    .ENDEF
                           A    34    .DEFINE "field_width"
                           A    35    .VALUE 5
                           A    36    .CLASS 8
                           A    37    .TYPE 2
                           A    38    .ENDEF
                           A    39    .DEFINE "precision"
                           A    40    .VALUE 6
                           A    41    .CLASS 8
                           A    42    .TYPE 2
                           A    43    .ENDEF
                           A    44    .DEFINE "set_begin"
                           A    45    .VALUE 7
                           A    46    .CLASS 8
                           A    47    .TYPE 34
                           A    48    .ENDEF
                           A    49    .DEFINE "set_end"
                           A    50    .VALUE 10
                           A    51    .CLASS 8
                           A    52    .TYPE 34
                           A    53    .ENDEF
                           A    54    .DEFINE "pad_whole"
                           A    55    .VALUE 13
                           A    56    .CLASS 8
                           A    57    .TYPE 12
                           A    58    .ENDEF
                           A    59    .DEFINE "pad_pre_fract"
                           A    60    .VALUE 14
                           A    61    .CLASS 8
                           A    62    .TYPE 12
                           A    63    .ENDEF
                           A    64    .DEFINE "pad_post_fract"
                           A    65    .VALUE 15
                           A    66    .CLASS 8
                           A    67    .TYPE 12
                           A    68    .ENDEF
                           A    69    .DEFINE "pad_at"
                           A    70    .VALUE 16
                           A    71    .CLASS 8
                           A    72    .TYPE 34
                           A    73    .ENDEF
                           A    74    .ENDREC "fmt_type"
                           A    75    .BEGREC "flt_info",12
                           A    76    .DEFINE "flags"
                           A    77    .VALUE 0
                           A    78    .CLASS 8
                           A    79    .TYPE 12
                           A    80    .ENDEF
                           A    81    .DEFINE "exp"
                           A    82    .VALUE 1
                           A    83    .CLASS 8
                           A    84    .TYPE 2
                           A    85    .ENDEF
                           A    86    .DEFINE "digits"
                           A    87    .VALUE 2
                           A    88    .CLASS 8
                           A    89    .DIM 10
                           A    90    .TYPE 108
                           A    91    .ENDEF
                           A    92    .ENDREC "flt_info"
                           A    93    .BEGREC "NONAME0",4
                           A    94    .DEFINE "dr"
                           A    95    .VALUE 0
                           A    96    .CLASS 8
                           A    97    .TYPE 12
                           A    98    .ENDEF
                           A    99    .DEFINE "ddr"
                           A   100    .VALUE 1
                           A   101    .CLASS 8
                           A   102    .TYPE 12
                           A   103    .ENDEF
                           A   104    .DEFINE "alt1"
                           A   105    .VALUE 2
                           A   106    .CLASS 8
                           A   107    .TYPE 12
                           A   108    .ENDEF
                           A   109    .DEFINE "alt2"
                           A   110    .VALUE 3
                           A   111    .CLASS 8
                           A   112    .TYPE 12
                           A   113    .ENDEF
                           A   114    .ENDREC "NONAME0"
                           A   115    .BEGREC "NONAME1",6
                           A   116    .DEFINE "baudRate"
                           A   117    .VALUE 0
                           A   118    .CLASS 8
                           A   119    .TYPE 4
                           A   120    .ENDEF
                           A   121    .DEFINE "dataBits"
                           A   122    .VALUE 3
                           A   123    .CLASS 8
                           A   124    .TYPE 12
                           A   125    .ENDEF
                           A   126    .DEFINE "stopBits"
                           A   127    .VALUE 4
                           A   128    .CLASS 8
                           A   129    .TYPE 12
                           A   130    .ENDEF
                           A   131    .DEFINE "parity"
                           A   132    .VALUE 5
                           A   133    .CLASS 8
                           A   134    .TYPE 12
                           A   135    .ENDEF
                           A   136    .ENDREC "NONAME1"
                           A   137    ;    1	/*
                           A   138    ;    2	 * Title:			AGON - Loadable UAR
                           A   139    ;    3	 * Author:			Jeroen Venema, orig
                           A   140    ;    4	 * Created:			06/01/2023
                           A   141    ;    5	 * Last Updated:	06/01/2023
                           A   142    ;    6	 * 
                           A   143    ;    7	 * The UART1 is on Port C
                           A   144    ;    8	 *
                           A   145    ;    9	 * - Port C0: TX
                           A   146    ;   10	 * - Port C1: RX
                           A   147    ;   11	 */
                           A   148    ;   12	 
                           A   149    ;   13	#include <stddef.h>
                           A   150    ;   14	#include <stdio.h>
                           A   151    ;   15	#include <eZ80.h>
                           A   152    ;   16	#include <defines.h>
                           A   153    ;   17	#include <gpio.h>
                           A   154    ;   18	
                           A   155    ;   19	#include "uart.h"
                           A   156    ;   20	 
                           A   157    ;   21	// Set the Line Control Register for da
                           A   158    ;   22	//
                           A   159    ;   23	#define SETREG_LCR1(data, stop, parity)
                           A   160    ;   24	
                           A   161    ;   25	VOID init_UART1() {
0402C3                     A   162    _init_UART1:
                           A   163    .DEFINE "_init_UART1"
                           A   164    
                           A   165    .VALUE _init_UART1
                           A   166    
                           A   167    .CLASS 2
                           A   168    
                           A   169    .TYPE 65
                           A   170    
                           A   171    .ENDEF
                           A   172    
                           A   173    .BEGFUNC "init_UART1",25,"_init_UART1"
                           A   174    
0402C3 DDE5                A   175    	PUSH	IX
0402C5 DD210000 00         A   176    	LD	IX,0
0402CA DD39                A   177    	ADD	IX,SP
                           A   178    ;   26		PC_DR = PORTC_DRVAL_DEF;
                           A   179    .LINE 26
                           A   180    
0402CC 3EFF                A   181    	LD	A,%FF
0402CE ED399E              A   182    	OUT0	(158),A
                           A   183    ;   27		PC_DDR = PORTC_DDRVAL_DEF;
                           A   184    .LINE 27
                           A   185    
0402D1 ED399F              A   186    	OUT0	(159),A
                           A   187    ;   28		PC_ALT1 = PORTC_ALT1VAL_DEF;
                           A   188    .LINE 28
                           A   189    
0402D4 AF                  A   190    	XOR	A,A
0402D5 ED39A0              A   191    	OUT0	(160),A
                           A   192    ;   29		PC_ALT2 = PORTC_ALT2VAL_DEF;
                           A   193    .LINE 29
                           A   194    
0402D8 AF                  A   195    	XOR	A,A
0402D9 ED39A1              A   196    	OUT0	(161),A
                           A   197    ;   30		return ;
                           A   198    ;   31	}
                           A   199    .LINE 31
                           A   200    
0402DC DDF9                A   201    	LD	SP,IX
0402DE DDE1                A   202    	POP	IX
0402E0 C9                  A   203    	RET	
                           A   204    
                           A   205    
                           A   206    ;**************************** _init_UART1 *****
                           A   207    ;Name                         Addr/Register   S
                           A   208    
                           A   209    
                           A   210    ; Stack Frame Size: 6 (bytes)
                           A   211    ;       Spill Code: 0 (instruction)
                           A   212    
                           A   213    
                           A   214    .ENDFUNC "init_UART1",31,"_init_UART1"
                           A   215    ;   32	
                           A   216    ;   33	// Open UART
                           A   217    ;   34	// Parameters:
                           A   218    ;   35	// - pUART: Structure containing the in
                           A   219    ;   36	//
                           A   220    ;   37	UCHAR open_UART1(UART *pUART) {
0402E1                     A   221    _open_UART1:
                           A   222    .DEFINE "_open_UART1"
                           A   223    
                           A   224    .VALUE _open_UART1
                           A   225    
                           A   226    .CLASS 2
                           A   227    
                           A   228    .TYPE 76
                           A   229    
                           A   230    .ENDEF
                           A   231    
                           A   232    .BEGFUNC "open_UART1",37,"_open_UART1"
                           A   233    
                           A   234    .LINE 37
                           A   235    
                           A   236    .DEFINE "pUART"
                           A   237    
                           A   238    .CLASS 65
                           A   239    
                           A   240    .VALUE 6
                           A   241    
                           A   242    .TAG "NONAME1"
                           A   243    
                           A   244    .TYPE 40
                           A   245    
                           A   246    .ENDEF
                           A   247    
                           A   248    .DEFINE "br"
                           A   249    
                           A   250    .CLASS 65
                           A   251    
                           A   252    .VALUE -2
                           A   253    
                           A   254    .TYPE 13
                           A   255    
                           A   256    .ENDEF
                           A   257    
0402E1 DDE5                A   258    	PUSH	IX
0402E3 DD210000 00         A   259    	LD	IX,0
0402E8 DD39                A   260    	ADD	IX,SP
0402EA 3B                  A   261    	DEC	SP
0402EB 3B                  A   262    	DEC	SP
                           A   263    ;   38		UINT16	br = MASTERCLOCK / (CLOCK_D
                           A   264    .LINE 38
                           A   265    
0402EC DD3106              A   266    	LD	IY,(IX+%6)
0402EF FD2700              A   267    	LD	HL,(IY+%0)
0402F2 29                  A   268    	ADD	HL,HL
0402F3 29                  A   269    	ADD	HL,HL
0402F4 29                  A   270    	ADD	HL,HL
0402F5 29                  A   271    	ADD	HL,HL
0402F6 E5C1                A   272    	LD	BC,HL
0402F8 CD ED 0B 04         A   273    	CALL	__itol
0402FC 21002D31            A   274    	LD	HL,3222784
040300 1E01                A   275    	LD	E,%1
040302 CD 76 06 04         A   276    	CALL	__ldivs
040306 DD75FE              A   277    	LD	(IX+%FFFFFFFE),L
040309 DD74FF              A   278    	LD	(IX+%FFFFFFFF),H
                           A   279    ;   39		UCHAR	pins = PORTPIN_ZERO | PORTP
                           A   280    ;   40		
                           A   281    ;   41		SETREG(PC_DDR, pins);				
                           A   282    .LINE 41
                           A   283    
04030C ED389F              A   284    	IN0	A,(159)
04030F F603                A   285    	OR	A,%3
040311 ED399F              A   286    	OUT0	(159),A
                           A   287    ;   42		RESETREG(PC_ALT1, pins);
                           A   288    .LINE 42
                           A   289    
040314 ED38A0              A   290    	IN0	A,(160)
040317 E6FC                A   291    	AND	A,%FC
040319 ED39A0              A   292    	OUT0	(160),A
                           A   293    ;   43		SETREG(PC_ALT2, pins);
                           A   294    .LINE 43
                           A   295    
04031C ED38A1              A   296    	IN0	A,(161)
04031F F603                A   297    	OR	A,%3
040321 ED39A1              A   298    	OUT0	(161),A
                           A   299    ;   44		
                           A   300    ;   45		SETREG(PC_DDR, PORTPIN_THREE);		
                           A   301    .LINE 45
                           A   302    
040324 ED389F              A   303    	IN0	A,(159)
040327 CBDF                A   304    	SET	%3,A
040329 ED399F              A   305    	OUT0	(159),A
                           A   306    ;   46		RESETREG(PC_ALT1, PORTPIN_THREE);
                           A   307    .LINE 46
                           A   308    
04032C ED38A0              A   309    	IN0	A,(160)
04032F CB9F                A   310    	RES	%3,A
040331 ED39A0              A   311    	OUT0	(160),A
                           A   312    ;   47		RESETREG(PC_ALT2, PORTPIN_THREE);
                           A   313    .LINE 47
                           A   314    
040334 ED38A1              A   315    	IN0	A,(161)
040337 CB9F                A   316    	RES	%3,A
040339 ED39A1              A   317    	OUT0	(161),A
                           A   318    ;   48		
                           A   319    ;   49		UART1_LCTL |= UART_LCTL_DLAB ;		
                           A   320    .LINE 49
                           A   321    
04033C ED38D3              A   322    	IN0	A,(211)
04033F CBFF                A   323    	SET	%7,A
040341 ED39D3              A   324    	OUT0	(211),A
                           A   325    ;   50		UART1_BRG_L = (br & 0xFF) ;			
                           A   326    .LINE 50
                           A   327    
040344 DD7EFE              A   328    	LD	A,(IX+%FFFFFFFE)
040347 ED39D0              A   329    	OUT0	(208),A
                           A   330    ;   51		UART1_BRG_H = (CHAR)(( br & 0xFF00 
                           A   331    .LINE 51
                           A   332    
04034A DD27FE              A   333    	LD	HL,(IX+%FFFFFFFE)
04034D 6C                  A   334    	LD	L,H
04034E 2600                A   335    	LD	H,%0
040350 E5C1                A   336    	LD	BC,HL
040352 CD EA 05 04         A   337    	CALL	__stoiu
040356 7D                  A   338    	LD	A,L
040357 ED39D1              A   339    	OUT0	(209),A
                           A   340    ;   52		UART1_LCTL &= (~UART_LCTL_DLAB) ; 	
                           A   341    .LINE 52
                           A   342    
04035A ED38D3              A   343    	IN0	A,(211)
04035D CBBF                A   344    	RES	%7,A
04035F ED39D3              A   345    	OUT0	(211),A
                           A   346    ;   53		UART1_MCTL = 0x00 ;					
                           A   347    .LINE 53
                           A   348    
040362 AF                  A   349    	XOR	A,A
040363 ED39D4              A   350    	OUT0	(212),A
                           A   351    ;   54		UART1_FCTL = 0x07 ;					
                           A   352    .LINE 54
                           A   353    
040366 3E07                A   354    	LD	A,%7
040368 ED39D2              A   355    	OUT0	(210),A
                           A   356    ;   55		UART1_IER = UART_IER_RECEIVEINT ;
                           A   357    .LINE 55
                           A   358    
04036B 3E01                A   359    	LD	A,%1
04036D ED39D1              A   360    	OUT0	(209),A
                           A   361    ;   56		
                           A   362    ;   57		SETREG_LCR1(pUART->dataBits, pUART-
                           A   363    .LINE 57
                           A   364    
040370 FD7E04              A   365    	LD	A,(IY+%4)
040373 3D                  A   366    	DEC	A
040374 E601                A   367    	AND	A,%1
040376 87                  A   368    	ADD	A,A
040377 87                  A   369    	ADD	A,A
040378 4F                  A   370    	LD	C,A
040379 FD7E03              A   371    	LD	A,(IY+%3)
04037C D605                A   372    	SUB	A,%5
04037E E603                A   373    	AND	A,%3
040380 47                  A   374    	LD	B,A
040381 79                  A   375    	LD	A,C
040382 B0                  A   376    	OR	A,B
040383 4F                  A   377    	LD	C,A
040384 FD7E05              A   378    	LD	A,(IY+%5)
040387 87                  A   379    	ADD	A,A
040388 87                  A   380    	ADD	A,A
040389 87                  A   381    	ADD	A,A
04038A 47                  A   382    	LD	B,A
04038B 79                  A   383    	LD	A,C
04038C B0                  A   384    	OR	A,B
04038D ED39D3              A   385    	OUT0	(211),A
                           A   386    ;   58		
                           A   387    ;   59		return UART_ERR_NONE ;
                           A   388    .LINE 59
                           A   389    
040390 AF                  A   390    	XOR	A,A
                           A   391    ;   60	}
                           A   392    .LINE 60
                           A   393    
040391 DDF9                A   394    	LD	SP,IX
040393 DDE1                A   395    	POP	IX
040395 C9                  A   396    	RET	
                           A   397    
                           A   398    
                           A   399    ;**************************** _open_UART1 *****
                           A   400    ;Name                         Addr/Register   S
                           A   401    ;br                                    IX-2    
                           A   402    ;pUART                                 IX+6    
                           A   403    
                           A   404    
                           A   405    ; Stack Frame Size: 11 (bytes)
                           A   406    ;       Spill Code: 0 (instruction)
                           A   407    
                           A   408    
                           A   409    .ENDFUNC "open_UART1",60,"_open_UART1"
                           A   410    ;   61	
                           A   411    ;   62	VOID uart1_puts(CHAR *str)
                           A   412    ;   63	{
040396                     A   413    _uart1_puts:
                           A   414    .DEFINE "_uart1_puts"
                           A   415    
                           A   416    .VALUE _uart1_puts
                           A   417    
                           A   418    .CLASS 2
                           A   419    
                           A   420    .TYPE 65
                           A   421    
                           A   422    .ENDEF
                           A   423    
                           A   424    .BEGFUNC "uart1_puts",63,"_uart1_puts"
                           A   425    
                           A   426    .LINE 63
                           A   427    
                           A   428    .DEFINE "str"
                           A   429    
                           A   430    .CLASS 65
                           A   431    
                           A   432    .VALUE 6
                           A   433    
                           A   434    .TYPE 34
                           A   435    
                           A   436    .ENDEF
                           A   437    
040396 DDE5                A   438    	PUSH	IX
040398 DD210000 00         A   439    	LD	IX,0
04039D DD39                A   440    	ADD	IX,SP
04039F C5                  A   441    	PUSH	BC
                           A   442    ;   64		while(*str)	uart1_putch(*str++);
                           A   443    .LINE 64
                           A   444    
0403A0 18 19               A   445    	JR	L_3
0403A2                     A   446    L_4:
0403A2 DD0706              A   447    	LD	BC,(IX+%6)
0403A5 DD0FFD              A   448    	LD	(IX+%FFFFFFFD),BC
0403A8 DD0706              A   449    	LD	BC,(IX+%6)
0403AB 03                  A   450    	INC	BC
0403AC DD0F06              A   451    	LD	(IX+%6),BC
0403AF DD27FD              A   452    	LD	HL,(IX+%FFFFFFFD)
0403B2 4E                  A   453    	LD	C,(HL)
0403B3 0600                A   454    	LD	B,%0
0403B5 C5                  A   455    	PUSH	BC
0403B6 CD 92 02 04         A   456    	CALL	_uart1_putch
0403BA C1                  A   457    	POP	BC
0403BB                     A   458    L_3:
0403BB DD2706              A   459    	LD	HL,(IX+%6)
0403BE 7E                  A   460    	LD	A,(HL)
0403BF B7                  A   461    	OR	A,A
0403C0 20 E0               A   462    	JR	NZ,L_4
                           A   463    ;   65	}
                           A   464    .LINE 65
                           A   465    
0403C2 DDF9                A   466    	LD	SP,IX
0403C4 DDE1                A   467    	POP	IX
0403C6 C9                  A   468    	RET	
                           A   469    
                           A   470    
                           A   471    ;**************************** _uart1_puts *****
                           A   472    ;Name                         Addr/Register   S
                           A   473    ;_uart1_putch                        IMPORT  --
                           A   474    ;str                                   IX+6    
                           A   475    
                           A   476    
                           A   477    ; Stack Frame Size: 12 (bytes)
                           A   478    ;       Spill Code: 0 (instruction)
                           A   479    
                           A   480    
                           A   481    .ENDFUNC "uart1_puts",65,"_uart1_puts"
                           A   482    	XREF _uart1_putch:ROM
                           A   483    	XREF __ldivs:ROM
                           A   484    	XREF __stoiu:ROM
                           A   485    	XREF __itol:ROM
                           A   486    	XDEF _uart1_puts
                           A   487    	XDEF _open_UART1
                           A   488    	XDEF _init_UART1
                           A   489    	END


Errors: 0
Warnings: 0
Lines Assembled: 490
